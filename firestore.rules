rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check for admin roles from the user's auth token
    function isAdmin() {
      return request.auth.token.role == 'admin' || request.auth.token.role == 'superadmin' || request.auth.token.superadmin == true;
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // A user can create their own user document
      allow create: if request.auth != null && request.auth.uid == userId;
      // Only admins can read the full list of users
      allow list: if isAdmin();
      // A user can read their own document, and admins can read any user document
      allow get: if request.auth != null && (request.auth.uid == userId || isAdmin());
      // Admins can update any user document
      allow update: if isAdmin();
      // No one can delete user documents through the client SDK
      allow delete: if false;
    }

    // Rules for the 'notes' collection
    match /notes/{noteId} {
      // A user can perform all operations on notes where their userId matches
      allow read, write: if request.auth != null && request.auth.uid == resource.data.userId;
      // Admins can also read any note
      allow read: if isAdmin();
       // Admins can also update any note (e.g., for soft deletion)
      allow update: if isAdmin();
    }
  }
}
